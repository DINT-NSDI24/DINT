From 5c7ef9c1a3381b610cd37a3dc5998d7e0b7afdc1 Mon Sep 17 00:00:00 2001
From: Josh Fried <joshuafried@gmail.com>
Date: Mon, 25 Jul 2022 20:22:24 -0700
Subject: [PATCH] MLX5 support for the iokernel datapath

---
 drivers/common/mlx5/mlx5_common_mr.h | 17 ++++-------------
 drivers/net/mlx5/meson.build         |  2 +-
 drivers/net/mlx5/mlx5_custom.h       |  8 ++++++++
 drivers/net/mlx5/mlx5_ethdev.c       | 18 ++++++++++++++++++
 drivers/net/mlx5/version.map         |  4 ++++
 5 files changed, 35 insertions(+), 14 deletions(-)
 create mode 100644 drivers/net/mlx5/mlx5_custom.h

diff --git a/drivers/common/mlx5/mlx5_common_mr.h b/drivers/common/mlx5/mlx5_common_mr.h
index cf384b6748..df807d8f24 100644
--- a/drivers/common/mlx5/mlx5_common_mr.h
+++ b/drivers/common/mlx5/mlx5_common_mr.h
@@ -191,20 +191,11 @@ uint32_t mlx5_mr_mb2mr_bh(struct mlx5_mr_ctrl *mr_ctrl, struct rte_mbuf *mbuf);
  *   Searched LKey on success, UINT32_MAX on no match.
  */
 static __rte_always_inline uint32_t
-mlx5_mr_mb2mr(struct mlx5_mr_ctrl *mr_ctrl, struct rte_mbuf *mbuf)
+mlx5_mr_mb2mr(struct mlx5_mr_ctrl *mr_ctrl __rte_unused, struct rte_mbuf *mbuf)
 {
-	uint32_t lkey;
-
-	/* Check generation bit to see if there's any change on existing MRs. */
-	if (unlikely(*mr_ctrl->dev_gen_ptr != mr_ctrl->cur_gen))
-		mlx5_mr_flush_local_cache(mr_ctrl);
-	/* Linear search on MR cache array. */
-	lkey = mlx5_mr_lookup_lkey(mr_ctrl->cache, &mr_ctrl->mru,
-				   MLX5_MR_CACHE_N, (uintptr_t)mbuf->buf_addr);
-	if (likely(lkey != UINT32_MAX))
-		return lkey;
-	/* Take slower bottom-half on miss. */
-	return mlx5_mr_mb2mr_bh(mr_ctrl, mbuf);
+	uint32_t lkey = *(uint32_t *)(((char *) mbuf) + sizeof(struct rte_mbuf));
+	if (unlikely(!lkey)) return UINT32_MAX;
+	return lkey;
 }
 
 /* mlx5_common_mr.c */
diff --git a/drivers/net/mlx5/meson.build b/drivers/net/mlx5/meson.build
index 99210fd9a2..f4100e5f36 100644
--- a/drivers/net/mlx5/meson.build
+++ b/drivers/net/mlx5/meson.build
@@ -9,7 +9,7 @@ if not (is_linux or is_windows)
 endif
 
 deps += ['hash', 'common_mlx5']
-headers = files('rte_pmd_mlx5.h')
+headers = files('rte_pmd_mlx5.h', 'mlx5_custom.h')
 sources = files(
         'mlx5.c',
         'mlx5_ethdev.c',
diff --git a/drivers/net/mlx5/mlx5_custom.h b/drivers/net/mlx5/mlx5_custom.h
new file mode 100644
index 0000000000..925721de96
--- /dev/null
+++ b/drivers/net/mlx5/mlx5_custom.h
@@ -0,0 +1,8 @@
+
+#ifndef RTE_PMD_MLX5_CUSTOM_H
+#define RTE_PMD_MLX5_CUSTOM_H
+
+void *mlx5_manual_reg_mr(uint8_t port_id, void *addr, size_t length, uint32_t *lkey_out);
+void mlx5_manual_dereg_mr(void *ibv_mr);
+
+#endif /* RTE_PMD_MLX5_CUSTOM_H */
diff --git a/drivers/net/mlx5/mlx5_ethdev.c b/drivers/net/mlx5/mlx5_ethdev.c
index 05c919ed39..9ea882e378 100644
--- a/drivers/net/mlx5/mlx5_ethdev.c
+++ b/drivers/net/mlx5/mlx5_ethdev.c
@@ -22,6 +22,7 @@
 
 #include <mlx5_malloc.h>
 
+#include "mlx5_custom.h"
 #include "mlx5_rxtx.h"
 #include "mlx5_rx.h"
 #include "mlx5_tx.h"
@@ -740,3 +741,20 @@ mlx5_hairpin_cap_get(struct rte_eth_dev *dev, struct rte_eth_hairpin_cap *cap)
 	cap->max_nb_desc = 8192;
 	return 0;
 }
+
+void *
+mlx5_manual_reg_mr(uint8_t port_id, void *addr, size_t length, uint32_t *lkey_out)
+{
+        struct rte_eth_dev *dev = &rte_eth_devices[port_id];
+        struct mlx5_priv *priv = dev->data->dev_private;
+        struct ibv_mr *ibv_mr = mlx5_glue->reg_mr(priv->sh->cdev->pd, addr, length, IBV_ACCESS_LOCAL_WRITE);
+        if (ibv_mr && lkey_out) *lkey_out = rte_cpu_to_be_32(ibv_mr->lkey);
+
+        return ibv_mr;
+}
+
+void
+mlx5_manual_dereg_mr(void *ibv_mr)
+{
+        mlx5_glue->dereg_mr(ibv_mr);
+}
diff --git a/drivers/net/mlx5/version.map b/drivers/net/mlx5/version.map
index 79cb79acc6..2a697294e8 100644
--- a/drivers/net/mlx5/version.map
+++ b/drivers/net/mlx5/version.map
@@ -1,4 +1,8 @@
 DPDK_22 {
+	global:
+	mlx5_manual_reg_mr;
+	mlx5_manual_dereg_mr;
+
 	local: *;
 };
 
-- 
2.17.1

